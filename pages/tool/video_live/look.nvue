<template>
	<view>
		<!-- src="http://mp4.vjshi.com/2021-05-19/e141f65baf6e46b4dd384fafbb5a6274.mp4" -->
		<video :style="{height: 640+'px'}"
			object-fit="fill"
			src="rtmp://pull.qilinjit.com/live/1?auth_key=1623152930-0-0-ecd93fb6c4dd846f447330b572782bca"
			:autoplay="true"
			:loop="true"
			:controls="false"
			:show-play-btn="false"
			:enable-progress-gesture="false"
		></video>
		<view class="top">
			<view class="author">
				<view class="author-l">
					<image class="author-l-head" :src="anchorInfo.avatar"></image>
					<view class="author-l-info">
						<text class="author-l-info-name">{{anchorInfo.nickname}}</text>
						<text class="author-l-info-zan">432本场点赞</text>
					</view>
				</view>
				<text class="author-r" @click="userFollow()">{{isFollow == 0 ? '关注' : '已关注'}}</text>
			</view>
			<view class="user">
				<image class="user-head" src="../../users/static/1.png"></image>
				<image class="user-head" src="../../users/static/1.png"></image>
				<image class="user-head" src="../../users/static/1.png"></image>
				<text class="user-num">{{userNum}}</text>
				<image class="user-close" src="../../../static/images/live_close.png" @click="closePage()"></image>
			</view>
		</view>
		<scroll-view class="msgs" id="msgs" :scroll-y="true" :show-scrollbar="false">
			<view class="msg" v-for="(item, index) in msgAll">
				<block v-if="item.type == 'msg'">
					<text class="uname">{{item.nickname}}：</text>
					<text class="umsg">{{item.msg}}</text>
				</block>
			</view>
			<view class="msg">
				<text class="umsg">xxx进入了直播间</text>
			</view>
		</scroll-view>
		<view class="bottom">
			<view class="bottom-l">
				<input class="bottom-l-l" type="text" :value="msg" v-model="msg" placeholder="说点什么" placeholder-style="color:#FFFFFF;" />
				<image class="bottom-l-r" src="../../../static/images/yuyin.png" @click="sendMessage()"></image>
			</view>
			<view class="bottom-r">
				<view class="bottom-r-i">
					<image class="bottom-r-l-img" src="../../../static/images/live_zf.png"></image>
				</view>
				<view class="bottom-r-i" @click="showBox(true)">
					<image class="bottom-r-r-img" src="../../../static/images/live_lw.png"></image>
				</view>
			</view>
		</view>
		<view class="box-mb" v-if="box" @click="showBox(false)"></view>
		<view class="box" v-if="box">
			<view class="box-t">
				<text class="box-tt">直播礼物</text>
			</view>
			<view class="box-c" v-if="box_tab == 1">
				<swiper class="box-c-swiper">
					<swiper-item v-for="(item, index) in gifts">
						<view class="swiper-item">
							<view :class="'box-c-swiper-item'+(gift_id==val.id ? ' box-c-swiper-item-curr' : '')" v-for="(val, key) in item" @click="selectGift(val.id)">
								<image class="box-c-swiper-item-img" :src="val.image"></image>
								<text class="box-c-swiper-item-name">{{val.name}}</text>
								<view class="row">
									<text class="box-c-swiper-item-yy" v-if="val.yinbei != null">{{val.yinbei}}音贝</text>
									<text class="box-c-swiper-item-yy" v-if="val.yinbei != null && val.yinzhu != null"> | </text>
									<text class="box-c-swiper-item-yy" v-if="val.yinzhu != null">{{val.yinzhu}}音铢</text>
								</view>
								<view class="row">
									<text class="box-c-swiper-item-yy" v-if="val.yinbao != null">{{val.yinbao}}音宝</text>
								</view>
							</view>
						</view>
					</swiper-item>
				</swiper>
			</view>
			<view class="box-c" v-if="box_tab == 2">表情</view>
			<view class="box-c" v-if="box_tab == 3">特效</view>
			<view class="box-b">
				<view class="tabs">
					<text :class="'tab '+(box_tab == 1 ? 'tab-curr' : '')" @click="switchBox(1)">礼物</text>
					<text :class="'tab '+(box_tab == 2 ? 'tab-curr' : '')" @click="switchBox(2)">表情</text>
					<text :class="'tab '+(box_tab == 3 ? 'tab-curr' : '')" @click="switchBox(3)">特效</text>
				</view>
				<view class="box-btns">
					<text class="box-btn">充值</text>
					<text class="box-btn" @click="give()">赠送</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import store from '../../../store';
	import {
		getDemandForm,
		getLiveRoomDetail,
		getGift,
		userFollow
	} from '@/api/liveApp.js';
	export default {
		data() {
			return {
				windowWidth: '',
				windowHeight: '',
				// 直播间详情
				row: '',
				// 礼物框
				box: false,
				box_tab: 1,
				// 主播信息
				anchorInfo: '',
				// 当前观看人信息
				userInfo: '',
				// 是否关注该主播,
				isFollow: 0,
				// 直播间人数
				userNum: 0,
				// 心跳
				ping: '',
				// 礼物列表
				gifts: [],
				// 消息列表
				msgAll: [],
				// 聊天框消息
				msg: '',
				// 选中礼物
				gift_id: ''
			}
		},
		onReady() {
			// 保持屏幕常亮
			uni.setKeepScreenOn({
			    keepScreenOn: true
			});
			var _this = this;
			
			uni.connectSocket({
			    url: 'ws://39.106.196.170:20196'
			});
			uni.onSocketOpen(function (res) {
				console.log('WebSocket连接已打开！');
				// 发送进入聊天室提醒
				_this.send('enter', '{"roomId":"1","msg":"xxx进入了直播间"}')
				// 开启心跳监听
				_this.heartbeat()
			});
			uni.onSocketError(function (res) {
				uni.showLoading({
					title: '断线重连中...'
				})
				// 请求重新连接
				clearInterval(_this.ping)	//关闭心跳检测
				var reconnect = setInterval(function (){
					uni.connectSocket({
					    url: 'ws://39.106.196.170:20196',
						success() {
							// 重连成功
							clearInterval(reconnect) //关闭重连
							_this.heartbeat()	//重新开启心跳
							uni.hideLoading()	//隐藏加载框
						}
					});
				}, 2000)
			});
			uni.onSocketMessage(function (res) {
				var datas = JSON.parse(res.data);
				console.log(res.data.data);
				
				switch(datas.type) {
					case 'endLive':
						uni.showToast({
							title: datas.data,
							icon: 'none'
						})
						// uni.switchTab({
						// 	url: '../../index/components/Home'
						// })
					break;
				    case 'enter':
						_this.msgAll.push('欢迎：'+datas.data);
				    break;
				    case 'logout':
				        _this.msgAll.push(datas.data);
				    break;
					case 'msg':
					    _this.msgAll.push(datas.data);
					break;
					case 'gift':
						uni.showToast({
							title: datas.data
						})
					break;
					case 'ping':
						// console.log('pong')
					break;
					case 'userNum':
						_this.userNum = datas.data;
					break;
				}
			});
			// 获取设备屏幕参数
			// uni.getSystemInfo({
			// 　　success: function(res) { // res - 各种参数
			// 　　 	this.windowWidth = res.windowWidth; // 屏幕的宽度 
			// 		this.windowHeight = res.windowHeight;// 屏幕的高度
			// 		console.log(this.windowHeight)
			// 	}
			// });
		},
		onLoad(options) {
			var _this = this;
			// 获取主播信息、拉流地址
			var data = {
				id: options.id
			}
			getLiveRoomDetail(data).then(res=> {
				_this.row = res.data.row;
				_this.src = res.data.row.pull_url;
				_this.anchorInfo = res.data.anchorInfo;
				_this.userInfo = res.data.userInfo;
			})
			// 获取礼物
			getGift({}).then(res => {
				_this.gifts = res.data.list;
			})
		},
		// 退出直播间
		// onUnload() {
		// 	this.send('logout', '{"roomId":"1", "msg":"xxx退出了"}')
		// 	uni.closeSocket();
		// 	uni.onSocketClose(function (res) {
		// 		console.log('WebSocket 已关闭！');
		// 	});
		// },
		methods: {
			// 退出直播间
			closePage() {
				uni.navigateBack({
					delta: 1
				})
			},
			// 打开底部盒子
			showBox(bool) {
				this.box = bool;
			},
			// 切换底部盒子
			switchBox(box) {
				this.box_tab = box;
			},
			// 用户关注/取消关注
			userFollow() {
				var _this = this;
				var operation = (_this.isFollow == 1) ? 0 : 1;
				var data = {
					to_user_id: _this.row.anchor_id,
					operation: operation
				};
				userFollow(data).then(res=>{
					
					_this.isFollow = operation;
				})
			},
			// 选中礼物
			selectGift(id) {
				this.gift_id = id;
			},
			// 赠送礼物
			give() {
				if(this.gift_id == '') {
					uni.showToast({
						title: '请选择礼物',
						icon: 'none'
					})
					return false;
				}
				
			},
			// 心跳检测,两秒一次
			heartbeat() {
				var _this = this;
				_this.ping = setInterval(function(){
					_this.send('ping', '{"roomId":"1", "msg":"心跳检测"}')
				}, 2000)
			},
			// 提交聊天内容
			sendMessage() {
				if(this.msg == '') {
					uni.showToast({
						title: '请输入聊天内容',
						icon: 'none'
					})
					return false;
				}
				// 提交聊天内容并清空输入内容
				this.send('msg', '{"roomId":"1", "msg":"'+this.msg+'", "nickname":"'+this.userInfo.nickname+'"}');
				this.msg = '';	//清空输入框内容
			},
			send(type, data) {
				var data = JSON.parse(data);
				data.userToken = store.state.app.token;
				var data = JSON.stringify(JSON.stringify(data));
				uni.sendSocketMessage({
					data: '{"type":"'+type+'","data":'+data+'}'
				})
			}
		}
	}
</script>

<style>
	@import "./look.css";
</style>
